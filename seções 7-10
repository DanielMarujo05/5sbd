/*Parte 7 – Junções e Produto Cartesiano (Seção 7)
Objetivo: Trabalhar com joins, aliases e produto cartesiano.
1. Usando a sintaxe proprietária da Oracle, exiba o nome de cada cliente junto com o número de sua conta.
2. Mostre todas as combinações possíveis de clientes e agências (produto cartesiano).
3. Usando aliases de tabela, exiba o nome dos clientes e a cidade da agência onde mantêm conta.*/

--1
SELECT C.CLIENTE_NOME, CT.CONTA_NUMERO
FROM CLIENTE C, CONTA CT
WHERE C.CLIENTE_COD = CT.CLIENTE_CLIENTE_COD;

--2
SELECT C.CLIENTE_NOME, A.AGENCIA_NOME
FROM CLIENTE C, AGENCIA A;

--3
SELECT C.CLIENTE_NOME AS CLIENTE, A.AGENCIA_CIDADE AS CIDADE_AGENCIA
FROM CLIENTE C
JOIN CONTA CT ON C.CLIENTE_COD = CT.CLIENTE_CLIENTE_COD
JOIN AGENCIA A ON CT.AGENCIA_AGENCIA_COD = A.AGENCIA_COD;


/*Parte 8 – Funções de Grupo, COUNT, DISTINCT e NVL (Seção 8)
Objetivo: Trabalhar com SUM, MAX, AVG, COUNT, DISTINCT, NVL.*/

--4
SELECT SUM(SALDO) AS SALDO_TOTAL
FROM CONTA;

--5
SELECT MAX(SALDO) AS MAIOR_SALDO, AVG(SALDO) AS MEDIA_SALDO
FROM CONTA;

--6
SELECT COUNT(*) AS QTD_CONTAS
FROM CONTA;

--7
SELECT COUNT(DISTINCT CIDADE) AS QTD_CIDADES_DISTINTAS
FROM CLIENTE;

--8
SELECT CONTA_NUMERO, NVL(SALDO,0) AS SALDO_AJUSTADO
FROM CONTA;


/*Parte 9 – GROUP BY, HAVING, ROLLUP e Operadores de Conjunto (Seção 9)
Objetivo: Trabalhar com GROUP BY, HAVING, ROLLUP, UNION.*/

--9
SELECT C.CIDADE, AVG(CT.SALDO) AS MEDIA_SALDO
FROM CLIENTE C
JOIN CONTA CT ON C.CLIENTE_COD = CT.CLIENTE_CLIENTE_COD
GROUP BY C.CIDADE;

--10
SELECT C.CIDADE, COUNT(CT.CONTA_NUMERO) AS QTD_CONTAS
FROM CLIENTE C
JOIN CONTA CT ON C.CLIENTE_COD = CT.CLIENTE_CLIENTE_COD
GROUP BY C.CIDADE
HAVING COUNT(CT.CONTA_NUMERO) > 3;

--11
SELECT A.AGENCIA_CIDADE, SUM(CT.SALDO) AS TOTAL_SALDO
FROM AGENCIA A
JOIN CONTA CT ON A.AGENCIA_COD = CT.AGENCIA_AGENCIA_COD
GROUP BY ROLLUP(A.AGENCIA_CIDADE);

--12
SELECT CLIENTE.CIDADE AS CIDADE FROM CLIENTE
UNION
SELECT AGENCIA_CIDADE AS CIDADE FROM AGENCIA;


/*Parte 10 – Subconsultas (Seções 10)
Objetivo: Trabalhar com subconsultas de linha única, multilinha, correlacionadas, EXISTS, NOT EXISTS e WITH.*/

/*Parte 10.1 – Subconsultas de Linha Única*/

--1
SELECT CLIENTE_NOME
FROM CLIENTE C
JOIN CONTA CT ON C.CLIENTE_COD = CT.CLIENTE_CLIENTE_COD
WHERE CT.SALDO > (SELECT AVG(SALDO) FROM CONTA);

--2
SELECT CLIENTE_NOME
FROM CLIENTE C
JOIN CONTA CT ON C.CLIENTE_COD = CT.CLIENTE_CLIENTE_COD
WHERE CT.SALDO = (SELECT MAX(SALDO) FROM CONTA);

--3
SELECT CIDADE
FROM CLIENTE
GROUP BY CIDADE
HAVING COUNT(*) > (SELECT AVG(QTD) FROM (SELECT COUNT(*) AS QTD FROM CLIENTE GROUP BY CIDADE));


/*Parte 10.2 – Subconsultas Multilinha*/

--4
SELECT CLIENTE_NOME
FROM CLIENTE C
JOIN CONTA CT ON C.CLIENTE_COD = CT.CLIENTE_CLIENTE_COD
WHERE CT.SALDO IN (SELECT SALDO FROM (SELECT SALDO FROM CONTA ORDER BY SALDO DESC FETCH FIRST 10 ROWS ONLY));

--5
SELECT CLIENTE_NOME
FROM CLIENTE C
JOIN CONTA CT ON C.CLIENTE_COD = CT.CLIENTE_CLIENTE_COD
WHERE CT.SALDO < (SELECT MIN(SALDO) FROM CONTA CT2 JOIN CLIENTE C2 ON CT2.CLIENTE_CLIENTE_COD = C2.CLIENTE_COD WHERE C2.CIDADE = 'Niterói');

--6
SELECT CLIENTE_NOME
FROM CLIENTE C
JOIN CONTA CT ON C.CLIENTE_COD = CT.CLIENTE_CLIENTE_COD
WHERE CT.SALDO BETWEEN 
      (SELECT MIN(SALDO) FROM CONTA CT2 JOIN CLIENTE C2 ON CT2.CLIENTE_CLIENTE_COD = C2.CLIENTE_COD WHERE C2.CIDADE = 'Volta Redonda')
  AND (SELECT MAX(SALDO) FROM CONTA CT3 JOIN CLIENTE C3 ON CT3.CLIENTE_CLIENTE_COD = C3.CLIENTE_COD WHERE C3.CIDADE = 'Volta Redonda');


/*Parte 10.3 – Subconsultas Correlacionadas*/

--7
SELECT CLIENTE_NOME
FROM CLIENTE C
JOIN CONTA CT ON C.CLIENTE_COD = CT.CLIENTE_CLIENTE_COD
WHERE CT.SALDO > (SELECT AVG(SALDO) FROM CONTA CT2 WHERE CT2.AGENCIA_AGENCIA_COD = CT.AGENCIA_AGENCIA_COD);

--8
SELECT CLIENTE_NOME, CIDADE
FROM CLIENTE C
JOIN CONTA CT ON C.CLIENTE_COD = CT.CLIENTE_CLIENTE_COD
WHERE CT.SALDO < (SELECT AVG(CT2.SALDO) FROM CONTA CT2 JOIN CLIENTE C2 ON CT2.CLIENTE_CLIENTE_COD = C2.CLIENTE_COD WHERE C2.CIDADE = C.CIDADE);


/*Parte 10.4 – Subconsultas com EXISTS e NOT EXISTS*/

--9
SELECT CLIENTE_NOME
FROM CLIENTE C
WHERE EXISTS (SELECT 1 FROM CONTA CT WHERE CT.CLIENTE_CLIENTE_COD = C.CLIENTE_COD);

--10
SELECT CLIENTE_NOME
FROM CLIENTE C
WHERE NOT EXISTS (SELECT 1 FROM CONTA CT WHERE CT.CLIENTE_CLIENTE_COD = C.CLIENTE_COD);


/*Parte 10.5 – Subconsulta Nomeada com WITH*/

--11
WITH MEDIA_CIDADE AS (
  SELECT CIDADE, AVG(CT.SALDO) AS MEDIA_SALDO
  FROM CLIENTE C
  JOIN CONTA CT ON C.CLIENTE_COD = CT.CLIENTE_CLIENTE_COD
  GROUP BY CIDADE
)
SELECT C.CLIENTE_NOME, CT.SALDO, C.CIDADE
FROM CLIENTE C
JOIN CONTA CT ON C.CLIENTE_COD = CT.CLIENTE_CLIENTE_COD
JOIN MEDIA_CIDADE M ON C.CIDADE = M.CIDADE
WHERE CT.SALDO > M.MEDIA_SALDO;
